#####################################################################
# Copyright (C) 2010
# by 52 North Initiative for Geospatial Open Source Software GmbH
# 
# Contact: Andreas Wytzisk
# 52 North Initiative for Geospatial Open Source Software GmbH
# Martin-Luther-King-Weg 24
# 48155 Muenster, Germany
# info@52north.org
# 
# This program is free software; you can redistribute and/or modify it under 
# the terms of the GNU General Public License version 2 as published by the 
# Free Software Foundation.
# 
# This program is distributed WITHOUT ANY WARRANTY; even without the implied
# WARRANTY OF MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# this program (see gnu-gpl v2.txt). If not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA or
# visit the Free Software Foundation web page, http://www.fsf.org.
# 
# Author: <LIST OF AUTHORS/EDITORS (optional line)>
# Created: <CREATION DATE (optional line)>
# Modified: <DATE OF LAST MODIFICATION (optional line)>
#####################################################################

########################################################### 
##SOME OF THE FOLLOWING PROPERTIES HAVE TO BE CHANGED!!! ##
###########################################################

#connectionstring to the DB **HAS TO BE CHANGED** 
conf.sos.ds.connectionstring=jdbc:postgresql://localhost:5432/uSos350DB

# your DB-username **HAS TO BE CHANGED** 
conf.sos.ds.user=kiesow

# your DB-password **HAS TO BE CHANGED** 
conf.sos.ds.password=kutterbeks

##################################################################
##FOLLOWING PROPERTIES ONLY TO BE CHANGED FOR ADVANCED USERS!!! ##
##################################################################

# DAOFactory instance configuration (ADVANCED) put in the class name of
# the specific DAOFactory implementation including the packagename
# change only if you have another implementation of the data access
# objects (e.g. for an Oracle database)!
conf.sos.ds.daofactory=org.n52.sos.uncertainty.ds.pgsql.PGSQLDAOFactory

# class of the capabilities cache controller
conf.sos.capabilitiesCacheController=org.n52.sos.uncertainty.cache.CapabilitiesCacheController

# Capabilities Cache Update Interval in minutes (0 = no automaticupdate!)
conf.sos.capabilitiesCacheUpdateInterval=5

# classname of the JDBC Driver (ADVANCED) example for postgre:
# org.postgresql.Driver change only if you are using another database
conf.sos.ds.driver=org.postgresql.Driver

# the initial number of connections available in the connection pool of this SOS (OPTIONAL)
conf.sos.ds.initcon=10

# the max number of connections available in the connection pool oft his SOS (OPTIONAL)
conf.sos.ds.maxcon=50

# comma seperated list of the class names of the listeners, including
# the package name (no whitespace allowed!) (ADVANCED)
conf.sos.listeners=org.n52.sos.GetCapabilitiesListener,org.n52.sos.uncertainty.GetObservationListener,org.n52.sos.DescribeSensorListener,org.n52.sos.GetResultListener,org.n52.sos.GetFeatureOfInterestListener,org.n52.sos.GetFeatureOfInterestTimeListener,org.n52.sos.GetDomainFeatureListener,org.n52.sos.UpdateSensorListener,org.n52.sos.InsertObservationListener,org.n52.sos.RegisterSensorListener,org.n52.sos.DescribeFeatureTypeListener,org.n52.sos.GetObservationByIdListener

# absoulte path of the directory with the sensor descriptions insensorML format (OPTIONAL)
conf.sos.sensordir=/WEB-INF/conf/sensors

# implementation of IOMEncoder used to encode observations (has to be
# reimplemented, if new observation types should be supported)
conf.sos.10.omEncoder=org.n52.sos.encode.impl.OMEncoder

# GMLEncoder implementation (implementation of IGMLEncoder) 
conf.sos.10.gmlEncoder=org.n52.sos.encode.impl.GMLEncoder

# OWSEncoder implementation (implementation of IOWSEncoder) 
conf.sos.10.owsEncoder=org.n52.sos.encode.impl.OWSEncoder

# HttpPostRequestDecoder SOS 1.0 implementation (implementation of IHttpPostRequestDecoder)
conf.sos.10.postRequestDecoder=org.n52.sos.uncertainty.decode.impl.HttpPostRequestDecoderMobile

# HttpGetRequestDecoder SOS 1.0 implementation (implementation of IHttpGetRequestDecoder)
conf.sos.10.getRequestDecoder=org.n52.sos.decode.impl.HttpGetRequestDecoderMobile

# ResponseEncoder implementation (implementation of IResponseEncoder)
conf.sos.10.getResponseEncoder=org.n52.sos.encode.impl.SosResponseEncoder

# SensorMLEncoder implementation (implementation of ISensorMLEncoder)
conf.sos.10.sensorMLEncoder=org.n52.sos.encode.impl.SensorMLEncoder

# property indicates, whether SOS supports mobile requests ; (default:= true)
conf.sos.mobileEnabled=true

# property indicates, whether OperationMetadata for Getobservation in GetCapabilities 
# response contains only property names or property names and allowed values for 
# FeatureOfInterest, Procedure, ObservedProperty and DomainFeature(default = true)
conf.sos.showFullOperationsMetadata4Observations=true

# property indicates, whether OperationMetadata in GetCapabilities response contains 
# only property names or property names and allowed values (default = true)
conf.sos.showFullOperationsMetadata=true

# property indicates whether duplicate observations should be skipped silently when inserted by batch (default = true)
conf.sos.skipDuplicateObservations=true

# gml date format OPTIONAL if not set, response time is iso formatted
# (yyy-MM-dd'T'HH:mm:ss.SSSZZ). example: 2005-12-14T12:14:39.000+01:00
conf.sos.gmlDateFormat=

# character encoding for response documents (ADVANCED) 
conf.sos.characterEncoding=UTF-8

# prefix URN for the spatial reference system (ADVANCED) 
conf.sos.10.srs.prefix=urn:ogc:def:crs:EPSG::

# property indicates, whether SOS supports quality informations in
# observations or not; (default := false)
conf.sos.supportsQuality=false

# property keeps a list of all EPSG codes for which the SOS has to
# switch coordinates from long/lat to lat/long
conf.sos.switchCoordinatesForEPSG=2044-2045;2081-2083;2085-2086;2093;2096-2098;2105-2132;2169-2170;2176-2180;2193;2200;2206-2212;2319;2320-2462;2523-2549;2551-2735;2738-2758;2935-2941;2953;3006-3030;3034-3035;3058-3059;3068;3114-3118;3126-3138;3300-3301;3328-3335;3346;3350-3352;3366;3416;4001-4999;20004-20032;20064-20092;21413-21423;21473-21483;21896-21899;22171;22181-22187;22191-22197;25884;27205-27232;27391-27398;27492;28402-28432;28462-28492;30161-30179;30800;31251-31259;31275-31279;31281-31290;31466-31700

# property indicates, whether SOS encodes the complete FOI-instance
# within an Observation instance or just the FOI id; (default := true)
conf.sos.foiEncodedInObservation=true

# property indicates, whether to include list of FOI IDs in offerings (default = true)
conf.sos.foiListedInOfferings=true

# time of lease for result template in getResult operation (in minutes)
conf.sos.result.lease=600

# token seperator in result element 
conf.sos.result.tokenseperator=,

# tuple seperator in result element ('@@' is NOT a valid Maven value!!)
conf.sos.result.tupleseperator=;

# decimal separator in result element 
conf.sos.result.decimalSeparator=.

# no data value for result string containing the values in common
# observation and getResult response
conf.sos.result.nodatavalue=noData

# URL of SOS web application 
conf.sos.service.url=http://${deploy.target.host}:${deploy.target.port}/${conf.sos.name}

# acceptedFormats
conf.sos.capabilities.acceptformats=text/xml,application/zip
conf.sos.capabilities.sections=ServiceIdentification,ServiceProvider,OperationsMetadata,Filter_Capabilities,Contents,All

# Logger configuration 
conf.sos.logdir=${catalina.home}/logs/${conf.sos.name}.log
conf.sos.loglevel=INFO

# support for dynamic locations as spatial values (default=false)
conf.sos.supportDynamicLocation=false

# observable property for dynamic locations
conf.sos.dynamicLocation.observableProperty=urn:ogc:def:phenomenon:OGC:1.0.30:Position

# dynamic location setting for foi (default=false)
conf.sos.setFoiLocationDynamically=false

#########################
# capabilities settings #
#########################

#service identification
conf.sos.capabilities.identification.title=IFGI SOS 
conf.sos.capabilities.identification.abstract=52n SOS at IFGI, Muenster, Germany
conf.sos.capabilities.identification.keywords=water level, gauge height, waterspeed
conf.sos.capabilities.identification.servicetype=OGC:SOS
conf.sos.capabilities.identification.fees=NONE
conf.sos.capabilities.identification.accessconstrains=NONE

# absoulte path and name of the service identification file for the capabilities document (OPTIONAL)
conf.sos.serviceidentificationfile=/WEB-INF/conf/capabilities/serviceIdentification.xml

# service provider
conf.sos.capabilities.provider.name=52North
conf.sos.capabilities.provider.site=http://52north.org/swe
conf.sos.capabilities.provider.individual.name=TBA
conf.sos.capabilities.provider.position.name=TBA
conf.sos.capabilities.provider.phone=+49(0)251/396 371-0
conf.sos.capabilities.provider.address=Marin-Luther-King-Weg 24
conf.sos.capabilities.provider.city=Muenster
conf.sos.capabilities.provider.zip=48155
conf.sos.capabilities.provider.state=North Rhine-Westphalia
conf.sos.capabilities.provider.country=Germany
conf.sos.capabilities.provider.email=info@52north.org

# absoulte path and name of the service provider file for the capabilities document(OPTIONAL)
conf.sos.serviceproviderfile=/WEB-INF/conf/capabilities/serviceProvider.xml

########################################
# special settings for SOS 2.0 support #
########################################

# implementation of IOMEncoder used to encode observations (has to be
# reimplemented, if new observation types should be supported)
conf.sos.20.om2Encoder=org.n52.sos.v20.encode.impl.OM2Encoder

# GMLEncoder implementation (implementation of IGMLEncoder) 
conf.sos.20.gml321Encoder=org.n52.sos.v20.encode.impl.GML321Encoder

# FeatureEncoder implementation (implementation of IFeatureEncoder) 
conf.sos.20.featureEncoder4SosV2=org.n52.sos.v20.encode.impl.FeatureEncoderV2

# OWSEncoder implementation (implementation of IOWSEncoder) 
conf.sos.20.owsEncoder4SosV2=org.n52.sos.v20.encode.impl.OWSEncoder4SosV2

# HttpPostRequestDecoder SOS 2.0 implementation (implementation of IHttpPostRequestDecoder)
conf.sos.20.postRequestDecoder=org.n52.sos.v20.decode.impl.HttpPostRequestDecoderV2

# HttpGetRequestDecoder SOS 2.0 implementation (implementation of IHttpGetRequestDecoder)
conf.sos.20.getRequestDecoder=org.n52.sos.v20.decode.impl.HttpGetRequestDecoderV2

# SensorMLEncoder implementation (implementation of ISensorMLEncoder)
conf.sos.20.sensorMLEncoder=org.n52.sos.v20.encode.impl.SensorMLEncoder4SosV2

# prefix URN for the spatial reference system (ADVANCED) 
conf.sos.20.srs.prefix=http://www.opengis.net/def/crs/EPSG/0/